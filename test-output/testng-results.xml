<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" ignored="10" total="67" passed="51">
  <reporter-output>
  </reporter-output>
  <suite name="Web Suite" duration-ms="4593967" started-at="2020-10-15T11:21:00Z" finished-at="2020-10-15T12:37:34Z">
    <groups>
    </groups>
    <test name="Web Tests" duration-ms="4593967" started-at="2020-10-15T11:21:00Z" finished-at="2020-10-15T12:37:34Z">
      <class name="tests.ios.ride.Surus">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="beforeClass" is-config="true" duration-ms="1114" started-at="2020-10-15T11:51:58Z" finished-at="2020-10-15T11:51:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="setUp" is-config="true" duration-ms="18368" started-at="2020-10-15T11:51:59Z" finished-at="2020-10-15T11:52:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Surus.TC_034_Surus_Basladi_Kodlu_Kilit()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_034_Surus_Basladi_Kodlu_Kilit()[pri:34, instance:tests.ios.ride.Surus@4f063c0a]" name="TC_034_Surus_Basladi_Kodlu_Kilit" duration-ms="75092" started-at="2020-10-15T11:52:17Z" finished-at="2020-10-15T11:53:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_034_Surus_Basladi_Kodlu_Kilit -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="tearDown" is-config="true" duration-ms="4886" started-at="2020-10-15T11:53:32Z" finished-at="2020-10-15T11:53:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_034_Surus_Basladi_Kodlu_Kilit status=SUCCESS method=Surus.TC_034_Surus_Basladi_Kodlu_Kilit()[pri:34, instance:tests.ios.ride.Surus@4f063c0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="setUp" is-config="true" duration-ms="15354" started-at="2020-10-15T11:53:37Z" finished-at="2020-10-15T11:53:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Surus.TC_035_Surus_Baslat()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_035_Surus_Baslat()[pri:35, instance:tests.ios.ride.Surus@4f063c0a]" name="TC_035_Surus_Baslat" duration-ms="70081" started-at="2020-10-15T11:53:53Z" finished-at="2020-10-15T11:55:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_035_Surus_Baslat -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="tearDown" is-config="true" duration-ms="4037" started-at="2020-10-15T11:55:03Z" finished-at="2020-10-15T11:55:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_035_Surus_Baslat status=SUCCESS method=Surus.TC_035_Surus_Baslat()[pri:35, instance:tests.ios.ride.Surus@4f063c0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="setUp" is-config="true" duration-ms="14167" started-at="2020-10-15T11:55:07Z" finished-at="2020-10-15T11:55:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Surus.TC_036_Nasil_Surulur_Gecilmemis()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_036_Nasil_Surulur_Gecilmemis()[pri:36, instance:tests.ios.ride.Surus@4f063c0a]" name="TC_036_Nasil_Surulur_Gecilmemis" duration-ms="126054" started-at="2020-10-15T11:55:21Z" finished-at="2020-10-15T11:57:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_036_Nasil_Surulur_Gecilmemis -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="tearDown" is-config="true" duration-ms="5483" started-at="2020-10-15T11:57:27Z" finished-at="2020-10-15T11:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_036_Nasil_Surulur_Gecilmemis status=SUCCESS method=Surus.TC_036_Nasil_Surulur_Gecilmemis()[pri:36, instance:tests.ios.ride.Surus@4f063c0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="setUp" is-config="true" duration-ms="13890" started-at="2020-10-15T11:57:32Z" finished-at="2020-10-15T11:57:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Surus.TC_037_Acil_Mudahale()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_037_Acil_Mudahale()[pri:37, instance:tests.ios.ride.Surus@4f063c0a]" name="TC_037_Acil_Mudahale" duration-ms="72249" started-at="2020-10-15T11:57:46Z" finished-at="2020-10-15T11:58:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_037_Acil_Mudahale -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="tearDown" is-config="true" duration-ms="4956" started-at="2020-10-15T11:58:59Z" finished-at="2020-10-15T11:59:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_037_Acil_Mudahale status=SUCCESS method=Surus.TC_037_Acil_Mudahale()[pri:37, instance:tests.ios.ride.Surus@4f063c0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="setUp" is-config="true" duration-ms="12225" started-at="2020-10-15T11:59:04Z" finished-at="2020-10-15T11:59:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Surus.TC_038_Nasil_Surulur()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_038_Nasil_Surulur()[pri:38, instance:tests.ios.ride.Surus@4f063c0a]" name="TC_038_Nasil_Surulur" duration-ms="71771" started-at="2020-10-15T11:59:16Z" finished-at="2020-10-15T12:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_038_Nasil_Surulur -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="tearDown" is-config="true" duration-ms="4863" started-at="2020-10-15T12:00:28Z" finished-at="2020-10-15T12:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_038_Nasil_Surulur status=SUCCESS method=Surus.TC_038_Nasil_Surulur()[pri:38, instance:tests.ios.ride.Surus@4f063c0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="setUp" is-config="true" duration-ms="12416" started-at="2020-10-15T12:00:32Z" finished-at="2020-10-15T12:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Surus.TC_039_Ortalama()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_039_Ortalama()[pri:39, instance:tests.ios.ride.Surus@4f063c0a]" name="TC_039_Ortalama" duration-ms="82010" started-at="2020-10-15T12:00:45Z" finished-at="2020-10-15T12:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_039_Ortalama -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="tearDown" is-config="true" duration-ms="4184" started-at="2020-10-15T12:02:07Z" finished-at="2020-10-15T12:02:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_039_Ortalama status=SUCCESS method=Surus.TC_039_Ortalama()[pri:39, instance:tests.ios.ride.Surus@4f063c0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="setUp" is-config="true" duration-ms="11975" started-at="2020-10-15T12:02:11Z" finished-at="2020-10-15T12:02:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Surus.TC_040_Surus_Bitirme()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_040_Surus_Bitirme()[pri:40, instance:tests.ios.ride.Surus@4f063c0a]" name="TC_040_Surus_Bitirme" duration-ms="111669" started-at="2020-10-15T12:02:23Z" finished-at="2020-10-15T12:04:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_040_Surus_Bitirme -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="tearDown" is-config="true" duration-ms="6692" started-at="2020-10-15T12:04:15Z" finished-at="2020-10-15T12:04:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_040_Surus_Bitirme status=SUCCESS method=Surus.TC_040_Surus_Bitirme()[pri:40, instance:tests.ios.ride.Surus@4f063c0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="setUp" is-config="true" duration-ms="21332" started-at="2020-10-15T12:04:21Z" finished-at="2020-10-15T12:04:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Surus.TC_041_Park_Edilemez_Alan()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_041_Park_Edilemez_Alan()[pri:41, instance:tests.ios.ride.Surus@4f063c0a]" name="TC_041_Park_Edilemez_Alan" duration-ms="102212" started-at="2020-10-15T12:04:43Z" finished-at="2020-10-15T12:06:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_041_Park_Edilemez_Alan -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="tearDown" is-config="true" duration-ms="5255" started-at="2020-10-15T12:06:25Z" finished-at="2020-10-15T12:06:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_041_Park_Edilemez_Alan status=SUCCESS method=Surus.TC_041_Park_Edilemez_Alan()[pri:41, instance:tests.ios.ride.Surus@4f063c0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="setUp" is-config="true" duration-ms="13947" started-at="2020-10-15T12:06:30Z" finished-at="2020-10-15T12:06:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Surus.TC_042_Kilit_Takilmadi()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_042_Kilit_Takilmadi()[pri:42, instance:tests.ios.ride.Surus@4f063c0a]" name="TC_042_Kilit_Takilmadi" duration-ms="98095" started-at="2020-10-15T12:06:44Z" finished-at="2020-10-15T12:08:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_042_Kilit_Takilmadi -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="tearDown" is-config="true" duration-ms="4744" started-at="2020-10-15T12:08:22Z" finished-at="2020-10-15T12:08:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_042_Kilit_Takilmadi status=SUCCESS method=Surus.TC_042_Kilit_Takilmadi()[pri:42, instance:tests.ios.ride.Surus@4f063c0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="setUp" is-config="true" duration-ms="15500" started-at="2020-10-15T12:08:27Z" finished-at="2020-10-15T12:08:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Surus.TC_044_Surus_Bitir_Internet_Kapali()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="TC_044_Surus_Bitir_Internet_Kapali()[pri:44, instance:tests.ios.ride.Surus@4f063c0a]" name="TC_044_Surus_Bitir_Internet_Kapali" duration-ms="230015" started-at="2020-10-15T12:08:42Z" finished-at="2020-10-15T12:12:32Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: By.id: wifi-button (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: By.id: wifi-button (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at utilities.PageBaseIos.waitClickable(PageBaseIos.java:81)
at utilities.PageBaseIos.getValue(PageBaseIos.java:199)
at dbmodel.DataPreparation.TestDevice.setWIFIServiceStatus(TestDevice.java:136)
at pages.ios.ride.pageSurus.Surus_Bitir_Internet_Kapali(pageSurus.java:344)
at tests.ios.ride.Surus.TC_044_Surus_Bitir_Internet_Kapali(Surus.java:397)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
Caused by: org.openqa.selenium.NoSuchElementException: no such element (An element could not be located on the page using the given search parameters (ID='wifi-button'))  (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NQRRDTM', ip: '192.168.8.120', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_241'
Driver info: io.appium.java_client.ios.IOSDriver
Capabilities {appBuildVersion: , appReleaseVersion: , appiumVersion: 1.8.0, autoAcceptAlerts: false, autoDismissAlerts: false, autoGrantPermissions: false, autoWebview: false, automationName: XCUITest, bundleId: com.martitech.martiscooter...., commandTimeouts: 120000, desired: {automationName: XCUITest, bundleId: com.martitech.martiscooter...., deviceName: iPhone, noReset: false, platformName: iOS, platformVersion: 12, udid: f2f3f5b148d523fa2ded1f4ee1e...}, device.category: PHONE, device.majorVersion: 12, device.manufacture: Apple, device.model: iPhone 5s, device.name: emre iPhone’u, device.os: iOS, device.screenSize: 640x1136, device.serialNumber: f2f3f5b148d523fa2ded1f4ee1e..., device.version: 12.4.8, deviceName: iPhone, deviceUDID: f2f3f5b148d523fa2ded1f4ee1e..., dontGoHomeOnQuit: false, dontStopAppOnReset: false, fullReset: false, install.only.for.update: false, instrumentApp: false, javascriptEnabled: true, keystorePath: ~/.android/debug.keystore, locationServicesAuthorized: false, newSessionWaitTimeout: 600, noReset: false, platform: IOS, platformName: iOS, platformVersion: 12, projectName: , reportDirectory: reports, reportFormat: xml, reportUrl: C:\Users\emre\appiumstudio-..., reservationDuration: 240, takeScreenshots: true, test.type: Mobile, testName: mobile test 10/15/20 03:08 PM, udid: f2f3f5b148d523fa2ded1f4ee1e..., useKeystore: false, waitForDeviceTimeout: 120000}
Session ID: 7755449e-c2c4-44e3-93e4-4d6b3f4d1719
*** Element info: {Using=id, value=wifi-button}
at sun.reflect.GeneratedConstructorAccessor30.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:69)
at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElementById(IOSDriver.java:1)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:641)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:638)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 18 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_044_Surus_Bitir_Internet_Kapali -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="tearDown" is-config="true" duration-ms="5811" started-at="2020-10-15T12:12:33Z" finished-at="2020-10-15T12:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_044_Surus_Bitir_Internet_Kapali status=FAILURE method=Surus.TC_044_Surus_Bitir_Internet_Kapali()[pri:44, instance:tests.ios.ride.Surus@4f063c0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="setUp" is-config="true" duration-ms="14502" started-at="2020-10-15T12:12:38Z" finished-at="2020-10-15T12:12:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Surus.TC_045_Ceza_Kurallarina_Erisim()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="TC_045_Ceza_Kurallarina_Erisim()[pri:45, instance:tests.ios.ride.Surus@4f063c0a]" name="TC_045_Ceza_Kurallarina_Erisim" duration-ms="57993" started-at="2020-10-15T12:12:53Z" finished-at="2020-10-15T12:13:51Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: By.className: UIATextField (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: By.className: UIATextField (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at utilities.PageBaseIos.waitClickable(PageBaseIos.java:81)
at utilities.PageBaseIos.writeText(PageBaseIos.java:146)
at pages.ios.ride.pageGirisEkrani.Giris_Basarili(pageGirisEkrani.java:143)
at tests.ios.ride.Surus.TC_045_Ceza_Kurallarina_Erisim(Surus.java:430)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
Caused by: org.openqa.selenium.NoSuchElementException: no such element (An element could not be located on the page using the given search parameters (CLASS_NAME='UIATextField'))  (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NQRRDTM', ip: '192.168.8.120', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_241'
Driver info: io.appium.java_client.ios.IOSDriver
Capabilities {appBuildVersion: , appReleaseVersion: , appiumVersion: 1.8.0, autoAcceptAlerts: false, autoDismissAlerts: false, autoGrantPermissions: false, autoWebview: false, automationName: XCUITest, bundleId: com.martitech.martiscooter...., commandTimeouts: 120000, desired: {automationName: XCUITest, bundleId: com.martitech.martiscooter...., deviceName: iPhone, noReset: false, platformName: iOS, platformVersion: 12, udid: f2f3f5b148d523fa2ded1f4ee1e...}, device.category: PHONE, device.majorVersion: 12, device.manufacture: Apple, device.model: iPhone 5s, device.name: emre iPhone’u, device.os: iOS, device.screenSize: 640x1136, device.serialNumber: f2f3f5b148d523fa2ded1f4ee1e..., device.version: 12.4.8, deviceName: iPhone, deviceUDID: f2f3f5b148d523fa2ded1f4ee1e..., dontGoHomeOnQuit: false, dontStopAppOnReset: false, fullReset: false, install.only.for.update: false, instrumentApp: false, javascriptEnabled: true, keystorePath: ~/.android/debug.keystore, locationServicesAuthorized: false, newSessionWaitTimeout: 600, noReset: false, platform: IOS, platformName: iOS, platformVersion: 12, projectName: , reportDirectory: reports, reportFormat: xml, reportUrl: C:\Users\emre\appiumstudio-..., reservationDuration: 240, takeScreenshots: true, test.type: Mobile, testName: mobile test 10/15/20 03:12 PM, udid: f2f3f5b148d523fa2ded1f4ee1e..., useKeystore: false, waitForDeviceTimeout: 120000}
Session ID: b25b602c-d445-420f-80a5-85b1d485dc88
*** Element info: {Using=class name, value=UIATextField}
at sun.reflect.GeneratedConstructorAccessor30.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByClassName(RemoteWebDriver.java:412)
at io.appium.java_client.DefaultGenericMobileDriver.findElementByClassName(DefaultGenericMobileDriver.java:125)
at io.appium.java_client.AppiumDriver.findElementByClassName(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElementByClassName(IOSDriver.java:1)
at org.openqa.selenium.By$ByClassName.findElement(By.java:389)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:641)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:638)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_045_Ceza_Kurallarina_Erisim -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="tearDown" is-config="true" duration-ms="5259" started-at="2020-10-15T12:13:51Z" finished-at="2020-10-15T12:13:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_045_Ceza_Kurallarina_Erisim status=FAILURE method=Surus.TC_045_Ceza_Kurallarina_Erisim()[pri:45, instance:tests.ios.ride.Surus@4f063c0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="setUp" is-config="true" duration-ms="12032" started-at="2020-10-15T12:13:56Z" finished-at="2020-10-15T12:14:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Surus.TC_046_Odeme_Hatasi()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_046_Odeme_Hatasi()[pri:46, instance:tests.ios.ride.Surus@4f063c0a]" name="TC_046_Odeme_Hatasi" duration-ms="84727" started-at="2020-10-15T12:14:08Z" finished-at="2020-10-15T12:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_046_Odeme_Hatasi -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="tearDown" is-config="true" duration-ms="4879" started-at="2020-10-15T12:15:33Z" finished-at="2020-10-15T12:15:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_046_Odeme_Hatasi status=SUCCESS method=Surus.TC_046_Odeme_Hatasi()[pri:46, instance:tests.ios.ride.Surus@4f063c0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="setUp" is-config="true" duration-ms="16454" started-at="2020-10-15T12:15:38Z" finished-at="2020-10-15T12:15:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Surus.TC_047_Surus_Bitirme_Basarili()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_047_Surus_Bitirme_Basarili()[pri:47, instance:tests.ios.ride.Surus@4f063c0a]" name="TC_047_Surus_Bitirme_Basarili" duration-ms="115660" started-at="2020-10-15T12:15:54Z" finished-at="2020-10-15T12:17:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_047_Surus_Bitirme_Basarili -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Surus@4f063c0a]" name="tearDown" is-config="true" duration-ms="5020" started-at="2020-10-15T12:17:50Z" finished-at="2020-10-15T12:17:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_047_Surus_Bitirme_Basarili status=SUCCESS method=Surus.TC_047_Surus_Bitirme_Basarili()[pri:47, instance:tests.ios.ride.Surus@4f063c0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ios.ride.Surus -->
      <class name="tests.ios.ride.Yukleme_Ekrani">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="beforeSuite" is-config="true" duration-ms="143" started-at="2020-10-15T11:20:59Z" finished-at="2020-10-15T11:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="beforeClass" is-config="true" duration-ms="1483" started-at="2020-10-15T11:21:00Z" finished-at="2020-10-15T11:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="setUp" is-config="true" duration-ms="16095" started-at="2020-10-15T11:21:01Z" finished-at="2020-10-15T11:21:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Yukleme_Ekrani.TC_002_Uygulama_Baslangici_Basarili()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_002_Uygulama_Baslangici_Basarili()[pri:2, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="TC_002_Uygulama_Baslangici_Basarili" duration-ms="19159" started-at="2020-10-15T11:21:17Z" finished-at="2020-10-15T11:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002_Uygulama_Baslangici_Basarili -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="tearDown" is-config="true" duration-ms="3921" started-at="2020-10-15T11:21:36Z" finished-at="2020-10-15T11:21:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_002_Uygulama_Baslangici_Basarili status=SUCCESS method=Yukleme_Ekrani.TC_002_Uygulama_Baslangici_Basarili()[pri:2, instance:tests.ios.ride.Yukleme_Ekrani@67205a84] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="setUp" is-config="true" duration-ms="13481" started-at="2020-10-15T11:21:40Z" finished-at="2020-10-15T11:21:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Yukleme_Ekrani.TC_004_Oturum_Kontrolu_Basarili()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_004_Oturum_Kontrolu_Basarili()[pri:4, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="TC_004_Oturum_Kontrolu_Basarili" duration-ms="37104" started-at="2020-10-15T11:21:54Z" finished-at="2020-10-15T11:22:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_004_Oturum_Kontrolu_Basarili -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="tearDown" is-config="true" duration-ms="4197" started-at="2020-10-15T11:22:31Z" finished-at="2020-10-15T11:22:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_004_Oturum_Kontrolu_Basarili status=SUCCESS method=Yukleme_Ekrani.TC_004_Oturum_Kontrolu_Basarili()[pri:4, instance:tests.ios.ride.Yukleme_Ekrani@67205a84] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="setUp" is-config="true" duration-ms="16304" started-at="2020-10-15T11:22:35Z" finished-at="2020-10-15T11:22:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Yukleme_Ekrani.TC_005_Surus_Kontrolu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_005_Surus_Kontrolu()[pri:5, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="TC_005_Surus_Kontrolu" duration-ms="61388" started-at="2020-10-15T11:22:51Z" finished-at="2020-10-15T11:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_005_Surus_Kontrolu -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="tearDown" is-config="true" duration-ms="4007" started-at="2020-10-15T11:23:53Z" finished-at="2020-10-15T11:23:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_005_Surus_Kontrolu status=SUCCESS method=Yukleme_Ekrani.TC_005_Surus_Kontrolu()[pri:5, instance:tests.ios.ride.Yukleme_Ekrani@67205a84] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="setUp" is-config="true" duration-ms="16210" started-at="2020-10-15T11:23:57Z" finished-at="2020-10-15T11:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Yukleme_Ekrani.TC_007_Tckn_Kontrolu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_007_Tckn_Kontrolu()[pri:7, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="TC_007_Tckn_Kontrolu" duration-ms="29988" started-at="2020-10-15T11:24:13Z" finished-at="2020-10-15T11:24:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_007_Tckn_Kontrolu -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="tearDown" is-config="true" duration-ms="4407" started-at="2020-10-15T11:24:43Z" finished-at="2020-10-15T11:24:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_007_Tckn_Kontrolu status=SUCCESS method=Yukleme_Ekrani.TC_007_Tckn_Kontrolu()[pri:7, instance:tests.ios.ride.Yukleme_Ekrani@67205a84] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="setUp" is-config="true" duration-ms="16321" started-at="2020-10-15T11:24:47Z" finished-at="2020-10-15T11:25:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Yukleme_Ekrani.TC_009_Dinamik_Bildirim_Kontrolu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_009_Dinamik_Bildirim_Kontrolu()[pri:9, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="TC_009_Dinamik_Bildirim_Kontrolu" duration-ms="38696" started-at="2020-10-15T11:25:04Z" finished-at="2020-10-15T11:25:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_009_Dinamik_Bildirim_Kontrolu -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="tearDown" is-config="true" duration-ms="4146" started-at="2020-10-15T11:25:42Z" finished-at="2020-10-15T11:25:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_009_Dinamik_Bildirim_Kontrolu status=SUCCESS method=Yukleme_Ekrani.TC_009_Dinamik_Bildirim_Kontrolu()[pri:9, instance:tests.ios.ride.Yukleme_Ekrani@67205a84] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:tests.ios.ride.Yukleme_Ekrani@67205a84]" name="afterSuite" is-config="true" duration-ms="27" started-at="2020-10-15T12:37:34Z" finished-at="2020-10-15T12:37:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.ios.ride.Yukleme_Ekrani -->
      <class name="tests.ios.ride.Borclar">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.ios.ride.Borclar@2a17b7b6]" name="beforeClass" is-config="true" duration-ms="937" started-at="2020-10-15T11:45:33Z" finished-at="2020-10-15T11:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Borclar@2a17b7b6]" name="setUp" is-config="true" duration-ms="12533" started-at="2020-10-15T11:45:34Z" finished-at="2020-10-15T11:45:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Borclar.TC_029_Borclu_Kullanici()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_029_Borclu_Kullanici()[pri:29, instance:tests.ios.ride.Borclar@2a17b7b6]" name="TC_029_Borclu_Kullanici" duration-ms="40204" started-at="2020-10-15T11:45:47Z" finished-at="2020-10-15T11:46:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_029_Borclu_Kullanici -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Borclar@2a17b7b6]" name="tearDown" is-config="true" duration-ms="5057" started-at="2020-10-15T11:46:27Z" finished-at="2020-10-15T11:46:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_029_Borclu_Kullanici status=SUCCESS method=Borclar.TC_029_Borclu_Kullanici()[pri:29, instance:tests.ios.ride.Borclar@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Borclar@2a17b7b6]" name="setUp" is-config="true" duration-ms="14177" started-at="2020-10-15T11:46:32Z" finished-at="2020-10-15T11:46:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Borclar.TC_030_Borclu_Kullanici_Plus_15()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_030_Borclu_Kullanici_Plus_15()[pri:30, instance:tests.ios.ride.Borclar@2a17b7b6]" name="TC_030_Borclu_Kullanici_Plus_15" duration-ms="60854" started-at="2020-10-15T11:46:46Z" finished-at="2020-10-15T11:47:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_030_Borclu_Kullanici_Plus_15 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Borclar@2a17b7b6]" name="tearDown" is-config="true" duration-ms="4123" started-at="2020-10-15T11:47:47Z" finished-at="2020-10-15T11:47:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_030_Borclu_Kullanici_Plus_15 status=SUCCESS method=Borclar.TC_030_Borclu_Kullanici_Plus_15()[pri:30, instance:tests.ios.ride.Borclar@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Borclar@2a17b7b6]" name="setUp" is-config="true" duration-ms="13492" started-at="2020-10-15T11:47:51Z" finished-at="2020-10-15T11:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Borclar.TC_031_Borc_Odeme()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_031_Borc_Odeme()[pri:31, instance:tests.ios.ride.Borclar@2a17b7b6]" name="TC_031_Borc_Odeme" duration-ms="55107" started-at="2020-10-15T11:48:05Z" finished-at="2020-10-15T11:49:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_031_Borc_Odeme -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Borclar@2a17b7b6]" name="tearDown" is-config="true" duration-ms="4320" started-at="2020-10-15T11:49:00Z" finished-at="2020-10-15T11:49:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_031_Borc_Odeme status=SUCCESS method=Borclar.TC_031_Borc_Odeme()[pri:31, instance:tests.ios.ride.Borclar@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Borclar@2a17b7b6]" name="setUp" is-config="true" duration-ms="18335" started-at="2020-10-15T11:49:04Z" finished-at="2020-10-15T11:49:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Borclar.TC_032_Borc_Odeme_Islemi_Basarili()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_032_Borc_Odeme_Islemi_Basarili()[pri:32, instance:tests.ios.ride.Borclar@2a17b7b6]" name="TC_032_Borc_Odeme_Islemi_Basarili" duration-ms="64387" started-at="2020-10-15T11:49:22Z" finished-at="2020-10-15T11:50:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_032_Borc_Odeme_Islemi_Basarili -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Borclar@2a17b7b6]" name="tearDown" is-config="true" duration-ms="5131" started-at="2020-10-15T11:50:27Z" finished-at="2020-10-15T11:50:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_032_Borc_Odeme_Islemi_Basarili status=SUCCESS method=Borclar.TC_032_Borc_Odeme_Islemi_Basarili()[pri:32, instance:tests.ios.ride.Borclar@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Borclar@2a17b7b6]" name="setUp" is-config="true" duration-ms="13650" started-at="2020-10-15T11:50:32Z" finished-at="2020-10-15T11:50:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Borclar.TC_033_Borc_Odeme_Islemi_Basarisiz()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_033_Borc_Odeme_Islemi_Basarisiz()[pri:33, instance:tests.ios.ride.Borclar@2a17b7b6]" name="TC_033_Borc_Odeme_Islemi_Basarisiz" duration-ms="66405" started-at="2020-10-15T11:50:46Z" finished-at="2020-10-15T11:51:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_033_Borc_Odeme_Islemi_Basarisiz -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Borclar@2a17b7b6]" name="tearDown" is-config="true" duration-ms="5856" started-at="2020-10-15T11:51:52Z" finished-at="2020-10-15T11:51:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_033_Borc_Odeme_Islemi_Basarisiz status=SUCCESS method=Borclar.TC_033_Borc_Odeme_Islemi_Basarisiz()[pri:33, instance:tests.ios.ride.Borclar@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ios.ride.Borclar -->
      <class name="tests.ios.ride.Ana_Ekran">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="beforeClass" is-config="true" duration-ms="1094" started-at="2020-10-15T11:33:49Z" finished-at="2020-10-15T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="setUp" is-config="true" duration-ms="12686" started-at="2020-10-15T11:33:50Z" finished-at="2020-10-15T11:34:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Ana_Ekran.TC_015_Acik_Riza_Hatirlatma_Goster()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_015_Acik_Riza_Hatirlatma_Goster()[pri:15, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="TC_015_Acik_Riza_Hatirlatma_Goster" duration-ms="61230" started-at="2020-10-15T11:34:02Z" finished-at="2020-10-15T11:35:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_015_Acik_Riza_Hatirlatma_Goster -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="tearDown" is-config="true" duration-ms="3660" started-at="2020-10-15T11:35:04Z" finished-at="2020-10-15T11:35:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_015_Acik_Riza_Hatirlatma_Goster status=SUCCESS method=Ana_Ekran.TC_015_Acik_Riza_Hatirlatma_Goster()[pri:15, instance:tests.ios.ride.Ana_Ekran@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="setUp" is-config="true" duration-ms="15285" started-at="2020-10-15T11:35:07Z" finished-at="2020-10-15T11:35:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Ana_Ekran.TC_015_Acik_Riza_Hatirlatma_Gosterme()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_015_Acik_Riza_Hatirlatma_Gosterme()[pri:15, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="TC_015_Acik_Riza_Hatirlatma_Gosterme" duration-ms="21842" started-at="2020-10-15T11:35:23Z" finished-at="2020-10-15T11:35:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_015_Acik_Riza_Hatirlatma_Gosterme -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="tearDown" is-config="true" duration-ms="4079" started-at="2020-10-15T11:35:44Z" finished-at="2020-10-15T11:35:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_015_Acik_Riza_Hatirlatma_Gosterme status=SUCCESS method=Ana_Ekran.TC_015_Acik_Riza_Hatirlatma_Gosterme()[pri:15, instance:tests.ios.ride.Ana_Ekran@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="setUp" is-config="true" duration-ms="16342" started-at="2020-10-15T11:35:49Z" finished-at="2020-10-15T11:36:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Ana_Ekran.TC_015_Dinamik_Popup_Gosterme_Acik_Riza_Yok()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_015_Dinamik_Popup_Gosterme_Acik_Riza_Yok()[pri:15, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="TC_015_Dinamik_Popup_Gosterme_Acik_Riza_Yok" duration-ms="20693" started-at="2020-10-15T11:36:05Z" finished-at="2020-10-15T11:36:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_015_Dinamik_Popup_Gosterme_Acik_Riza_Yok -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="tearDown" is-config="true" duration-ms="4388" started-at="2020-10-15T11:36:26Z" finished-at="2020-10-15T11:36:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_015_Dinamik_Popup_Gosterme_Acik_Riza_Yok status=SUCCESS method=Ana_Ekran.TC_015_Dinamik_Popup_Gosterme_Acik_Riza_Yok()[pri:15, instance:tests.ios.ride.Ana_Ekran@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="setUp" is-config="true" duration-ms="16605" started-at="2020-10-15T11:36:30Z" finished-at="2020-10-15T11:36:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Ana_Ekran.TC_015_Dinamik_Popup_Gosterme_Popup_Yok()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_015_Dinamik_Popup_Gosterme_Popup_Yok()[pri:15, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="TC_015_Dinamik_Popup_Gosterme_Popup_Yok" duration-ms="22512" started-at="2020-10-15T11:36:47Z" finished-at="2020-10-15T11:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_015_Dinamik_Popup_Gosterme_Popup_Yok -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="tearDown" is-config="true" duration-ms="3922" started-at="2020-10-15T11:37:09Z" finished-at="2020-10-15T11:37:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_015_Dinamik_Popup_Gosterme_Popup_Yok status=SUCCESS method=Ana_Ekran.TC_015_Dinamik_Popup_Gosterme_Popup_Yok()[pri:15, instance:tests.ios.ride.Ana_Ekran@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="setUp" is-config="true" duration-ms="14679" started-at="2020-10-15T11:37:13Z" finished-at="2020-10-15T11:37:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Ana_Ekran.TC_016_Surus_Baslat()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_016_Surus_Baslat()[pri:16, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="TC_016_Surus_Baslat" duration-ms="41047" started-at="2020-10-15T11:37:28Z" finished-at="2020-10-15T11:38:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_016_Surus_Baslat -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="tearDown" is-config="true" duration-ms="5001" started-at="2020-10-15T11:38:09Z" finished-at="2020-10-15T11:38:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_016_Surus_Baslat status=SUCCESS method=Ana_Ekran.TC_016_Surus_Baslat()[pri:16, instance:tests.ios.ride.Ana_Ekran@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="setUp" is-config="true" duration-ms="17250" started-at="2020-10-15T11:38:14Z" finished-at="2020-10-15T11:38:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Ana_Ekran.TC_017_Tckn_Gecersiz()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_017_Tckn_Gecersiz()[pri:17, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="TC_017_Tckn_Gecersiz" duration-ms="66120" started-at="2020-10-15T11:38:31Z" finished-at="2020-10-15T11:39:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_017_Tckn_Gecersiz -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="tearDown" is-config="true" duration-ms="6133" started-at="2020-10-15T11:39:37Z" finished-at="2020-10-15T11:39:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_017_Tckn_Gecersiz status=SUCCESS method=Ana_Ekran.TC_017_Tckn_Gecersiz()[pri:17, instance:tests.ios.ride.Ana_Ekran@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="setUp" is-config="true" duration-ms="17197" started-at="2020-10-15T11:39:43Z" finished-at="2020-10-15T11:40:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Ana_Ekran.TC_018_Odeme_Yontemi_Yok()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_018_Odeme_Yontemi_Yok()[pri:18, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="TC_018_Odeme_Yontemi_Yok" duration-ms="50644" started-at="2020-10-15T11:40:00Z" finished-at="2020-10-15T11:40:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_018_Odeme_Yontemi_Yok -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="tearDown" is-config="true" duration-ms="5862" started-at="2020-10-15T11:40:51Z" finished-at="2020-10-15T11:40:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_018_Odeme_Yontemi_Yok status=SUCCESS method=Ana_Ekran.TC_018_Odeme_Yontemi_Yok()[pri:18, instance:tests.ios.ride.Ana_Ekran@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="setUp" is-config="true" duration-ms="19199" started-at="2020-10-15T11:40:57Z" finished-at="2020-10-15T11:41:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Ana_Ekran.TC_020_Surus_Baslatma_Kod_Girisi()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_020_Surus_Baslatma_Kod_Girisi()[pri:20, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="TC_020_Surus_Baslatma_Kod_Girisi" duration-ms="44234" started-at="2020-10-15T11:41:16Z" finished-at="2020-10-15T11:42:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_020_Surus_Baslatma_Kod_Girisi -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="tearDown" is-config="true" duration-ms="4977" started-at="2020-10-15T11:42:00Z" finished-at="2020-10-15T11:42:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_020_Surus_Baslatma_Kod_Girisi status=SUCCESS method=Ana_Ekran.TC_020_Surus_Baslatma_Kod_Girisi()[pri:20, instance:tests.ios.ride.Ana_Ekran@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="setUp" is-config="true" duration-ms="16672" started-at="2020-10-15T11:42:05Z" finished-at="2020-10-15T11:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Ana_Ekran.TC_021_Surus_Baslat_Basarili()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="TC_021_Surus_Baslat_Basarili()[pri:21, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="TC_021_Surus_Baslat_Basarili" duration-ms="8571" started-at="2020-10-15T11:42:22Z" finished-at="2020-10-15T11:42:31Z">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NQRRDTM', ip: '192.168.8.120', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_241'
Driver info: driver.version: IOSDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NQRRDTM', ip: '192.168.8.120', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_241'
Driver info: driver.version: IOSDriver
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:125)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.implicitlyWait(RemoteWebDriver.java:780)
at utilities.PageBaseIos.exists(PageBaseIos.java:305)
at pages.ios.ride.pageGirisEkrani.Login(pageGirisEkrani.java:63)
at tests.ios.ride.Ana_Ekran.TC_021_Surus_Baslat_Basarili(Ana_Ekran.java:249)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_021_Surus_Baslat_Basarili -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="tearDown" is-config="true" duration-ms="6109" started-at="2020-10-15T11:42:31Z" finished-at="2020-10-15T11:42:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_021_Surus_Baslat_Basarili status=FAILURE method=Ana_Ekran.TC_021_Surus_Baslat_Basarili()[pri:21, instance:tests.ios.ride.Ana_Ekran@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="setUp" is-config="true" duration-ms="14801" started-at="2020-10-15T11:42:37Z" finished-at="2020-10-15T11:42:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Ana_Ekran.TC_022_Surus_Baslat_Basarisiz_Martiya_Uzak()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_022_Surus_Baslat_Basarisiz_Martiya_Uzak()[pri:22, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="TC_022_Surus_Baslat_Basarisiz_Martiya_Uzak" duration-ms="65630" started-at="2020-10-15T11:42:51Z" finished-at="2020-10-15T11:43:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_022_Surus_Baslat_Basarisiz_Martiya_Uzak -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="tearDown" is-config="true" duration-ms="4714" started-at="2020-10-15T11:43:57Z" finished-at="2020-10-15T11:44:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_022_Surus_Baslat_Basarisiz_Martiya_Uzak status=SUCCESS method=Ana_Ekran.TC_022_Surus_Baslat_Basarisiz_Martiya_Uzak()[pri:22, instance:tests.ios.ride.Ana_Ekran@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="setUp" is-config="true" duration-ms="14249" started-at="2020-10-15T11:44:02Z" finished-at="2020-10-15T11:44:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Ana_Ekran.TC_023_Daha_Cok_Marti()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_023_Daha_Cok_Marti()[pri:23, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="TC_023_Daha_Cok_Marti" duration-ms="26299" started-at="2020-10-15T11:44:16Z" finished-at="2020-10-15T11:44:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_023_Daha_Cok_Marti -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="tearDown" is-config="true" duration-ms="4206" started-at="2020-10-15T11:44:42Z" finished-at="2020-10-15T11:44:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_023_Daha_Cok_Marti status=SUCCESS method=Ana_Ekran.TC_023_Daha_Cok_Marti()[pri:23, instance:tests.ios.ride.Ana_Ekran@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="setUp" is-config="true" duration-ms="11845" started-at="2020-10-15T11:44:47Z" finished-at="2020-10-15T11:44:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Ana_Ekran.TC_028_Bildirimleri_Kontrol_Etme()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_028_Bildirimleri_Kontrol_Etme()[pri:28, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="TC_028_Bildirimleri_Kontrol_Etme" duration-ms="29598" started-at="2020-10-15T11:44:58Z" finished-at="2020-10-15T11:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_028_Bildirimleri_Kontrol_Etme -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Ana_Ekran@5d76b067]" name="tearDown" is-config="true" duration-ms="5254" started-at="2020-10-15T11:45:28Z" finished-at="2020-10-15T11:45:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_028_Bildirimleri_Kontrol_Etme status=SUCCESS method=Ana_Ekran.TC_028_Bildirimleri_Kontrol_Etme()[pri:28, instance:tests.ios.ride.Ana_Ekran@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ios.ride.Ana_Ekran -->
      <class name="tests.ios.ride.Menu">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="beforeClass" is-config="true" duration-ms="869" started-at="2020-10-15T12:17:55Z" finished-at="2020-10-15T12:17:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="16835" started-at="2020-10-15T12:17:56Z" finished-at="2020-10-15T12:18:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_050_Profil_Duzenleme()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_050_Profil_Duzenleme()[pri:50, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_050_Profil_Duzenleme" duration-ms="61716" started-at="2020-10-15T12:18:13Z" finished-at="2020-10-15T12:19:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_050_Profil_Duzenleme -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="4627" started-at="2020-10-15T12:19:14Z" finished-at="2020-10-15T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_050_Profil_Duzenleme status=SUCCESS method=Menu.TC_050_Profil_Duzenleme()[pri:50, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="12096" started-at="2020-10-15T12:19:19Z" finished-at="2020-10-15T12:19:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_051_Arkadasini_Davet_Et()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_051_Arkadasini_Davet_Et()[pri:51, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_051_Arkadasini_Davet_Et" duration-ms="50952" started-at="2020-10-15T12:19:31Z" finished-at="2020-10-15T12:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_051_Arkadasini_Davet_Et -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="4748" started-at="2020-10-15T12:20:22Z" finished-at="2020-10-15T12:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_051_Arkadasini_Davet_Et status=SUCCESS method=Menu.TC_051_Arkadasini_Davet_Et()[pri:51, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="11721" started-at="2020-10-15T12:20:27Z" finished-at="2020-10-15T12:20:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_052_Surusleri_Inceleme()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_052_Surusleri_Inceleme()[pri:52, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_052_Surusleri_Inceleme" duration-ms="34368" started-at="2020-10-15T12:20:38Z" finished-at="2020-10-15T12:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_052_Surusleri_Inceleme -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="5555" started-at="2020-10-15T12:21:13Z" finished-at="2020-10-15T12:21:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_052_Surusleri_Inceleme status=SUCCESS method=Menu.TC_052_Surusleri_Inceleme()[pri:52, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="13250" started-at="2020-10-15T12:21:18Z" finished-at="2020-10-15T12:21:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_053_Varsayilan_Kredi_Karti_Degistirme()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_053_Varsayilan_Kredi_Karti_Degistirme()[pri:53, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_053_Varsayilan_Kredi_Karti_Degistirme" duration-ms="23670" started-at="2020-10-15T12:21:32Z" finished-at="2020-10-15T12:21:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_053_Varsayilan_Kredi_Karti_Degistirme -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="4943" started-at="2020-10-15T12:21:55Z" finished-at="2020-10-15T12:22:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_053_Varsayilan_Kredi_Karti_Degistirme status=SUCCESS method=Menu.TC_053_Varsayilan_Kredi_Karti_Degistirme()[pri:53, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="17159" started-at="2020-10-15T12:22:00Z" finished-at="2020-10-15T12:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_054_Kredi_Karti_Ekleme_Basarili()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_054_Kredi_Karti_Ekleme_Basarili()[pri:54, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_054_Kredi_Karti_Ekleme_Basarili" duration-ms="56357" started-at="2020-10-15T12:22:17Z" finished-at="2020-10-15T12:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_054_Kredi_Karti_Ekleme_Basarili -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="4743" started-at="2020-10-15T12:23:14Z" finished-at="2020-10-15T12:23:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_054_Kredi_Karti_Ekleme_Basarili status=SUCCESS method=Menu.TC_054_Kredi_Karti_Ekleme_Basarili()[pri:54, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="11777" started-at="2020-10-15T12:23:18Z" finished-at="2020-10-15T12:23:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_055_Kredi_Karti_Ekleme_Basarisiz()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="TC_055_Kredi_Karti_Ekleme_Basarisiz()[pri:55, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_055_Kredi_Karti_Ekleme_Basarisiz" duration-ms="85389" started-at="2020-10-15T12:23:30Z" finished-at="2020-10-15T12:24:56Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: By.id: Lütfen kredi kartı bilgilerini kontrol et. (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: By.id: Lütfen kredi kartı bilgilerini kontrol et. (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at utilities.PageBaseIos.waitClickable(PageBaseIos.java:81)
at utilities.PageBaseIos.readText(PageBaseIos.java:180)
at utilities.PageBaseIos.assertEquals(PageBaseIos.java:218)
at pages.ios.ride.pageMenu.Kredi_Karti_Ekleme_Basarisiz(pageMenu.java:261)
at tests.ios.ride.Menu.TC_055_Kredi_Karti_Ekleme_Basarisiz(Menu.java:171)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
Caused by: org.openqa.selenium.NoSuchElementException: no such element (An element could not be located on the page using the given search parameters (ID='Lütfen kredi kartı bilgilerini kontrol et.'))  (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NQRRDTM', ip: '192.168.8.120', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_241'
Driver info: io.appium.java_client.ios.IOSDriver
Capabilities {appBuildVersion: , appReleaseVersion: , appiumVersion: 1.8.0, autoAcceptAlerts: false, autoDismissAlerts: false, autoGrantPermissions: false, autoWebview: false, automationName: XCUITest, bundleId: com.martitech.martiscooter...., commandTimeouts: 120000, desired: {automationName: XCUITest, bundleId: com.martitech.martiscooter...., deviceName: iPhone, noReset: false, platformName: iOS, platformVersion: 12, udid: f2f3f5b148d523fa2ded1f4ee1e...}, device.category: PHONE, device.majorVersion: 12, device.manufacture: Apple, device.model: iPhone 5s, device.name: emre iPhone’u, device.os: iOS, device.screenSize: 640x1136, device.serialNumber: f2f3f5b148d523fa2ded1f4ee1e..., device.version: 12.4.8, deviceName: iPhone, deviceUDID: f2f3f5b148d523fa2ded1f4ee1e..., dontGoHomeOnQuit: false, dontStopAppOnReset: false, fullReset: false, install.only.for.update: false, instrumentApp: false, javascriptEnabled: true, keystorePath: ~/.android/debug.keystore, locationServicesAuthorized: false, newSessionWaitTimeout: 600, noReset: false, platform: IOS, platformName: iOS, platformVersion: 12, projectName: , reportDirectory: reports, reportFormat: xml, reportUrl: C:\Users\emre\appiumstudio-..., reservationDuration: 240, takeScreenshots: true, test.type: Mobile, testName: mobile test 10/15/20 03:23 PM, udid: f2f3f5b148d523fa2ded1f4ee1e..., useKeystore: false, waitForDeviceTimeout: 120000}
Session ID: 97d53df1-ad55-49df-b501-fe7f2f17ad50
*** Element info: {Using=id, value=Lütfen kredi kartı bilgilerini kontrol et.}
at sun.reflect.GeneratedConstructorAccessor30.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:69)
at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElementById(IOSDriver.java:1)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:641)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:638)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 18 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_055_Kredi_Karti_Ekleme_Basarisiz -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="7138" started-at="2020-10-15T12:24:56Z" finished-at="2020-10-15T12:25:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_055_Kredi_Karti_Ekleme_Basarisiz status=FAILURE method=Menu.TC_055_Kredi_Karti_Ekleme_Basarisiz()[pri:55, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="15750" started-at="2020-10-15T12:25:03Z" finished-at="2020-10-15T12:25:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_056_Dil_Degistirme()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_056_Dil_Degistirme()[pri:56, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_056_Dil_Degistirme" duration-ms="41412" started-at="2020-10-15T12:25:19Z" finished-at="2020-10-15T12:26:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_056_Dil_Degistirme -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="4832" started-at="2020-10-15T12:26:00Z" finished-at="2020-10-15T12:26:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_056_Dil_Degistirme status=SUCCESS method=Menu.TC_056_Dil_Degistirme()[pri:56, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="11897" started-at="2020-10-15T12:26:05Z" finished-at="2020-10-15T12:26:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_059_Davet_Kodu_Girme()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="TC_059_Davet_Kodu_Girme()[pri:59, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_059_Davet_Kodu_Girme" duration-ms="88470" started-at="2020-10-15T12:26:17Z" finished-at="2020-10-15T12:27:45Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: By.className: UIATextField (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: By.className: UIATextField (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at utilities.PageBaseIos.waitClickable(PageBaseIos.java:81)
at utilities.PageBaseIos.writeText(PageBaseIos.java:146)
at pages.ios.ride.pageMenu.Kupon_Ekleme(pageMenu.java:410)
at tests.ios.ride.Menu.TC_059_Davet_Kodu_Girme(Menu.java:240)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
Caused by: org.openqa.selenium.NoSuchElementException: no such element (An element could not be located on the page using the given search parameters (CLASS_NAME='UIATextField'))  (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NQRRDTM', ip: '192.168.8.120', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_241'
Driver info: io.appium.java_client.ios.IOSDriver
Capabilities {appBuildVersion: , appReleaseVersion: , appiumVersion: 1.8.0, autoAcceptAlerts: false, autoDismissAlerts: false, autoGrantPermissions: false, autoWebview: false, automationName: XCUITest, bundleId: com.martitech.martiscooter...., commandTimeouts: 120000, desired: {automationName: XCUITest, bundleId: com.martitech.martiscooter...., deviceName: iPhone, noReset: false, platformName: iOS, platformVersion: 12, udid: f2f3f5b148d523fa2ded1f4ee1e...}, device.category: PHONE, device.majorVersion: 12, device.manufacture: Apple, device.model: iPhone 5s, device.name: emre iPhone’u, device.os: iOS, device.screenSize: 640x1136, device.serialNumber: f2f3f5b148d523fa2ded1f4ee1e..., device.version: 12.4.8, deviceName: iPhone, deviceUDID: f2f3f5b148d523fa2ded1f4ee1e..., dontGoHomeOnQuit: false, dontStopAppOnReset: false, fullReset: false, install.only.for.update: false, instrumentApp: false, javascriptEnabled: true, keystorePath: ~/.android/debug.keystore, locationServicesAuthorized: false, newSessionWaitTimeout: 600, noReset: false, platform: IOS, platformName: iOS, platformVersion: 12, projectName: , reportDirectory: reports, reportFormat: xml, reportUrl: C:\Users\emre\appiumstudio-..., reservationDuration: 240, takeScreenshots: true, test.type: Mobile, testName: mobile test 10/15/20 03:26 PM, udid: f2f3f5b148d523fa2ded1f4ee1e..., useKeystore: false, waitForDeviceTimeout: 120000}
Session ID: 72f69dfd-deb0-400d-ac0f-6fadf9418c7e
*** Element info: {Using=class name, value=UIATextField}
at sun.reflect.GeneratedConstructorAccessor30.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByClassName(RemoteWebDriver.java:412)
at io.appium.java_client.DefaultGenericMobileDriver.findElementByClassName(DefaultGenericMobileDriver.java:125)
at io.appium.java_client.AppiumDriver.findElementByClassName(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElementByClassName(IOSDriver.java:1)
at org.openqa.selenium.By$ByClassName.findElement(By.java:389)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:641)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:638)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_059_Davet_Kodu_Girme -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="7989" started-at="2020-10-15T12:27:45Z" finished-at="2020-10-15T12:27:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_059_Davet_Kodu_Girme status=FAILURE method=Menu.TC_059_Davet_Kodu_Girme()[pri:59, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="13976" started-at="2020-10-15T12:27:53Z" finished-at="2020-10-15T12:28:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_060_Arkadasini_Davet_Etme()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_060_Arkadasini_Davet_Etme()[pri:60, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_060_Arkadasini_Davet_Etme" duration-ms="73175" started-at="2020-10-15T12:28:07Z" finished-at="2020-10-15T12:29:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_060_Arkadasini_Davet_Etme -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="4968" started-at="2020-10-15T12:29:20Z" finished-at="2020-10-15T12:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_060_Arkadasini_Davet_Etme status=SUCCESS method=Menu.TC_060_Arkadasini_Davet_Etme()[pri:60, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="14829" started-at="2020-10-15T12:29:25Z" finished-at="2020-10-15T12:29:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_061_Guvenlik_Dokumanina_Erisim()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_061_Guvenlik_Dokumanina_Erisim()[pri:61, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_061_Guvenlik_Dokumanina_Erisim" duration-ms="46180" started-at="2020-10-15T12:29:40Z" finished-at="2020-10-15T12:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_061_Guvenlik_Dokumanina_Erisim -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="5213" started-at="2020-10-15T12:30:26Z" finished-at="2020-10-15T12:30:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_061_Guvenlik_Dokumanina_Erisim status=SUCCESS method=Menu.TC_061_Guvenlik_Dokumanina_Erisim()[pri:61, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="13210" started-at="2020-10-15T12:30:31Z" finished-at="2020-10-15T12:30:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_062_Nasil_Kullanilir_Erisim()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_062_Nasil_Kullanilir_Erisim()[pri:62, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_062_Nasil_Kullanilir_Erisim" duration-ms="71598" started-at="2020-10-15T12:30:45Z" finished-at="2020-10-15T12:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_062_Nasil_Kullanilir_Erisim -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="4951" started-at="2020-10-15T12:31:56Z" finished-at="2020-10-15T12:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_062_Nasil_Kullanilir_Erisim status=SUCCESS method=Menu.TC_062_Nasil_Kullanilir_Erisim()[pri:62, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="12001" started-at="2020-10-15T12:32:01Z" finished-at="2020-10-15T12:32:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_063_Surus_Kurallarina_Erisim()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_063_Surus_Kurallarina_Erisim()[pri:63, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_063_Surus_Kurallarina_Erisim" duration-ms="62531" started-at="2020-10-15T12:32:13Z" finished-at="2020-10-15T12:33:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_063_Surus_Kurallarina_Erisim -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="4160" started-at="2020-10-15T12:33:16Z" finished-at="2020-10-15T12:33:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_063_Surus_Kurallarina_Erisim status=SUCCESS method=Menu.TC_063_Surus_Kurallarina_Erisim()[pri:63, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="16225" started-at="2020-10-15T12:33:20Z" finished-at="2020-10-15T12:33:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_064_Kvkk_Aydinlatma_Metnine_Erisim()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_064_Kvkk_Aydinlatma_Metnine_Erisim()[pri:64, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_064_Kvkk_Aydinlatma_Metnine_Erisim" duration-ms="44929" started-at="2020-10-15T12:33:36Z" finished-at="2020-10-15T12:34:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_064_Kvkk_Aydinlatma_Metnine_Erisim -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="4629" started-at="2020-10-15T12:34:21Z" finished-at="2020-10-15T12:34:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_064_Kvkk_Aydinlatma_Metnine_Erisim status=SUCCESS method=Menu.TC_064_Kvkk_Aydinlatma_Metnine_Erisim()[pri:64, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="17402" started-at="2020-10-15T12:34:26Z" finished-at="2020-10-15T12:34:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_065_Kullanici_Sozlesmesine_Erisim()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_065_Kullanici_Sozlesmesine_Erisim()[pri:65, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_065_Kullanici_Sozlesmesine_Erisim" duration-ms="44569" started-at="2020-10-15T12:34:43Z" finished-at="2020-10-15T12:35:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_065_Kullanici_Sozlesmesine_Erisim -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="3734" started-at="2020-10-15T12:35:28Z" finished-at="2020-10-15T12:35:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_065_Kullanici_Sozlesmesine_Erisim status=SUCCESS method=Menu.TC_065_Kullanici_Sozlesmesine_Erisim()[pri:65, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="15882" started-at="2020-10-15T12:35:31Z" finished-at="2020-10-15T12:35:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_066_Yardim_Dokumanina_Erisim()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_066_Yardim_Dokumanina_Erisim()[pri:66, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_066_Yardim_Dokumanina_Erisim" duration-ms="41911" started-at="2020-10-15T12:35:47Z" finished-at="2020-10-15T12:36:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_066_Yardim_Dokumanina_Erisim -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="3675" started-at="2020-10-15T12:36:29Z" finished-at="2020-10-15T12:36:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_066_Yardim_Dokumanina_Erisim status=SUCCESS method=Menu.TC_066_Yardim_Dokumanina_Erisim()[pri:66, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="setUp" is-config="true" duration-ms="17128" started-at="2020-10-15T12:36:33Z" finished-at="2020-10-15T12:36:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Menu.TC_067_Cikis()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_067_Cikis()[pri:67, instance:tests.ios.ride.Menu@1e6d1014]" name="TC_067_Cikis" duration-ms="39221" started-at="2020-10-15T12:36:50Z" finished-at="2020-10-15T12:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_067_Cikis -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Menu@1e6d1014]" name="tearDown" is-config="true" duration-ms="4319" started-at="2020-10-15T12:37:29Z" finished-at="2020-10-15T12:37:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_067_Cikis status=SUCCESS method=Menu.TC_067_Cikis()[pri:67, instance:tests.ios.ride.Menu@1e6d1014] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ios.ride.Menu -->
      <class name="tests.ios.ride.Giris_Ekrani">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="beforeClass" is-config="true" duration-ms="915" started-at="2020-10-15T11:25:46Z" finished-at="2020-10-15T11:25:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="setUp" is-config="true" duration-ms="16250" started-at="2020-10-15T11:25:47Z" finished-at="2020-10-15T11:26:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Giris_Ekrani.TC_010_Giris_Basarili()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_010_Giris_Basarili()[pri:10, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="TC_010_Giris_Basarili" duration-ms="33410" started-at="2020-10-15T11:26:04Z" finished-at="2020-10-15T11:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_010_Giris_Basarili -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="tearDown" is-config="true" duration-ms="4567" started-at="2020-10-15T11:26:37Z" finished-at="2020-10-15T11:26:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_010_Giris_Basarili status=SUCCESS method=Giris_Ekrani.TC_010_Giris_Basarili()[pri:10, instance:tests.ios.ride.Giris_Ekrani@7d0587f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="setUp" is-config="true" duration-ms="16326" started-at="2020-10-15T11:26:42Z" finished-at="2020-10-15T11:26:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Giris_Ekrani.TC_011_Giris_Basarisiz()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_011_Giris_Basarisiz()[pri:11, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="TC_011_Giris_Basarisiz" duration-ms="23064" started-at="2020-10-15T11:26:58Z" finished-at="2020-10-15T11:27:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_011_Giris_Basarisiz -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="tearDown" is-config="true" duration-ms="4041" started-at="2020-10-15T11:27:21Z" finished-at="2020-10-15T11:27:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_011_Giris_Basarisiz status=SUCCESS method=Giris_Ekrani.TC_011_Giris_Basarisiz()[pri:11, instance:tests.ios.ride.Giris_Ekrani@7d0587f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="setUp" is-config="true" duration-ms="12450" started-at="2020-10-15T11:27:25Z" finished-at="2020-10-15T11:27:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Giris_Ekrani.TC_012_Dogrulama_Basarisiz()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_012_Dogrulama_Basarisiz()[pri:12, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="TC_012_Dogrulama_Basarisiz" duration-ms="40213" started-at="2020-10-15T11:27:38Z" finished-at="2020-10-15T11:28:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_012_Dogrulama_Basarisiz -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="tearDown" is-config="true" duration-ms="4937" started-at="2020-10-15T11:28:18Z" finished-at="2020-10-15T11:28:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_012_Dogrulama_Basarisiz status=SUCCESS method=Giris_Ekrani.TC_012_Dogrulama_Basarisiz()[pri:12, instance:tests.ios.ride.Giris_Ekrani@7d0587f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="setUp" is-config="true" duration-ms="13051" started-at="2020-10-15T11:28:23Z" finished-at="2020-10-15T11:28:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Giris_Ekrani.TC_013_Tekrar_Kod_Gonder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_013_Tekrar_Kod_Gonder()[pri:13, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="TC_013_Tekrar_Kod_Gonder" duration-ms="149453" started-at="2020-10-15T11:28:36Z" finished-at="2020-10-15T11:31:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_013_Tekrar_Kod_Gonder -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="tearDown" is-config="true" duration-ms="4125" started-at="2020-10-15T11:31:05Z" finished-at="2020-10-15T11:31:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_013_Tekrar_Kod_Gonder status=SUCCESS method=Giris_Ekrani.TC_013_Tekrar_Kod_Gonder()[pri:13, instance:tests.ios.ride.Giris_Ekrani@7d0587f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="setUp" is-config="true" duration-ms="14136" started-at="2020-10-15T11:31:09Z" finished-at="2020-10-15T11:31:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Giris_Ekrani.TC_014_Kullanici_Sozlesmesi()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC_014_Kullanici_Sozlesmesi()[pri:14, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="TC_014_Kullanici_Sozlesmesi" duration-ms="78293" started-at="2020-10-15T11:31:23Z" finished-at="2020-10-15T11:32:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_014_Kullanici_Sozlesmesi -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="tearDown" is-config="true" duration-ms="4914" started-at="2020-10-15T11:32:42Z" finished-at="2020-10-15T11:32:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_014_Kullanici_Sozlesmesi status=SUCCESS method=Giris_Ekrani.TC_014_Kullanici_Sozlesmesi()[pri:14, instance:tests.ios.ride.Giris_Ekrani@7d0587f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="setUp" is-config="true" duration-ms="12188" started-at="2020-10-15T11:32:47Z" finished-at="2020-10-15T11:32:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ios.ride.Giris_Ekrani.TC_015_Ulke_Kodu_Degistirme()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="TC_015_Ulke_Kodu_Degistirme()[pri:15, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="TC_015_Ulke_Kodu_Degistirme" duration-ms="44690" started-at="2020-10-15T11:32:59Z" finished-at="2020-10-15T11:33:44Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element (An element could not be located on the page using the given search parameters (ID='phonePrefix'))  (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NQRRDTM', ip: '192.168.8.120', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_241'
Driver info: io.appium.java_client.ios.IOSDriver
Capabilities {appBuildVersion: , appReleaseVersion: , appiumVersion: 1.8.0, autoAcceptAlerts: false, autoDismissAlerts: false, autoGrantPermissions: false, autoWebview: false, automationName: XCUITest, bundleId: com.martitech.martiscooter...., commandTimeouts: 120000, desired: {automationName: XCUITest, bundleId: com.martitech.martiscooter...., deviceName: iPhone, noReset: false, platformName: iOS, platformVersion: 12, udid: f2f3f5b148d523fa2ded1f4ee1e...}, device.category: PHONE, device.majorVersion: 12, device.manufacture: Apple, device.model: iPhone 5s, device.name: emre iPhone’u, device.os: iOS, device.screenSize: 640x1136, device.serialNumber: f2f3f5b148d523fa2ded1f4ee1e..., device.version: 12.4.8, deviceName: iPhone, deviceUDID: f2f3f5b148d523fa2ded1f4ee1e..., dontGoHomeOnQuit: false, dontStopAppOnReset: false, fullReset: false, install.only.for.update: false, instrumentApp: false, javascriptEnabled: true, keystorePath: ~/.android/debug.keystore, locationServicesAuthorized: false, newSessionWaitTimeout: 600, noReset: false, platform: IOS, platformName: iOS, platformVersion: 12, projectName: , reportDirectory: reports, reportFormat: xml, reportUrl: C:\Users\emre\appiumstudio-..., reservationDuration: 240, takeScreenshots: true, test.type: Mobile, testName: mobile test 10/15/20 02:32 PM, udid: f2f3f5b148d523fa2ded1f4ee1e..., useKeystore: false, waitForDeviceTimeout: 120000}
Session ID: 25dcc4d7-a775-485d-956a-e4cce7458d94
*** Element info: {Using=id, value=phonePrefix}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element (An element could not be located on the page using the given search parameters (ID='phonePrefix'))  (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NQRRDTM', ip: '192.168.8.120', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_241'
Driver info: io.appium.java_client.ios.IOSDriver
Capabilities {appBuildVersion: , appReleaseVersion: , appiumVersion: 1.8.0, autoAcceptAlerts: false, autoDismissAlerts: false, autoGrantPermissions: false, autoWebview: false, automationName: XCUITest, bundleId: com.martitech.martiscooter...., commandTimeouts: 120000, desired: {automationName: XCUITest, bundleId: com.martitech.martiscooter...., deviceName: iPhone, noReset: false, platformName: iOS, platformVersion: 12, udid: f2f3f5b148d523fa2ded1f4ee1e...}, device.category: PHONE, device.majorVersion: 12, device.manufacture: Apple, device.model: iPhone 5s, device.name: emre iPhone’u, device.os: iOS, device.screenSize: 640x1136, device.serialNumber: f2f3f5b148d523fa2ded1f4ee1e..., device.version: 12.4.8, deviceName: iPhone, deviceUDID: f2f3f5b148d523fa2ded1f4ee1e..., dontGoHomeOnQuit: false, dontStopAppOnReset: false, fullReset: false, install.only.for.update: false, instrumentApp: false, javascriptEnabled: true, keystorePath: ~/.android/debug.keystore, locationServicesAuthorized: false, newSessionWaitTimeout: 600, noReset: false, platform: IOS, platformName: iOS, platformVersion: 12, projectName: , reportDirectory: reports, reportFormat: xml, reportUrl: C:\Users\emre\appiumstudio-..., reservationDuration: 240, takeScreenshots: true, test.type: Mobile, testName: mobile test 10/15/20 02:32 PM, udid: f2f3f5b148d523fa2ded1f4ee1e..., useKeystore: false, waitForDeviceTimeout: 120000}
Session ID: 25dcc4d7-a775-485d-956a-e4cce7458d94
*** Element info: {Using=id, value=phonePrefix}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:69)
at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElementById(IOSDriver.java:1)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at utilities.PageBaseIos.click(PageBaseIos.java:111)
at pages.ios.ride.pageGirisEkrani.Ulke_Kodu_Degistirme(pageGirisEkrani.java:325)
at tests.ios.ride.Giris_Ekrani.TC_015_Ulke_Kodu_Degistirme(Giris_Ekrani.java:122)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_015_Ulke_Kodu_Degistirme -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ios.ride.Giris_Ekrani@7d0587f1]" name="tearDown" is-config="true" duration-ms="5099" started-at="2020-10-15T11:33:44Z" finished-at="2020-10-15T11:33:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_015_Ulke_Kodu_Degistirme status=FAILURE method=Giris_Ekrani.TC_015_Ulke_Kodu_Degistirme()[pri:15, instance:tests.ios.ride.Giris_Ekrani@7d0587f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ios.ride.Giris_Ekrani -->
    </test> <!-- Web Tests -->
  </suite> <!-- Web Suite -->
</testng-results>
